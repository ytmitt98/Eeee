--// Rayfield Library
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

--// Main Window
local Window = Rayfield:CreateWindow({
    Name = "Hashira Training",
    LoadingTitle = "Hashira Training",
    LoadingSubtitle = "made by vox",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "HashiraTraining",
        FileName = "Config"
    }
})

local MainTab = Window:CreateTab("Main", 4483362458)

----------------------------------------------------------------
-- Anti Lag (Button)
----------------------------------------------------------------
local antiLag = false
MainTab:CreateButton({
    Name = "Remove pop up and evolve effects",
    Callback = function()
        if antiLag then return end
        antiLag = true

        task.spawn(function()
            local Players = game:GetService("Players")
            local LocalPlayer = Players.LocalPlayer

            local badNames = {
                ["NewCharacterShowGui"] = true,
                ["NewCharacterShowController"] = true,
                ["BodySizeChange"] = true,
                ["middleBeams"] = true,
                ["LowerBeams"] = true,
            }

            local function clean(obj)
                if not obj or not obj.Parent then return end
                if badNames[obj.Name] then
                    pcall(function() obj:Destroy() end)
                elseif obj:IsA("ParticleEmitter") and obj.Parent and obj.Parent.Name == "Attachment" then
                    pcall(function() obj:Destroy() end)
                end
            end

            for _, obj in ipairs(game:GetDescendants()) do
                clean(obj)
            end

            local conn
            conn = game.DescendantAdded:Connect(function(obj)
                clean(obj)
            end)

            while antiLag do
                task.wait(10)
                for _, obj in ipairs(game:GetDescendants()) do
                    clean(obj)
                end
                collectgarbage("collect")
            end

            if conn and conn.Connected then
                conn:Disconnect()
            end
        end)
    end,
})

----------------------------------------------------------------
-- Auto Lift ðŸ’ª (Toggle)
----------------------------------------------------------------
local autoLift = false
MainTab:CreateToggle({
    Name = "Auto Lift ðŸ’ª",
    CurrentValue = false,
    Flag = "AutoLift",
    Callback = function(state)
        autoLift = state
        if autoLift then
            task.spawn(function()
                while autoLift do
                    for i = 1, 3 do
                        pcall(function()
                            game:GetService("ReplicatedStorage")
                                .Packages["_Index"]["sleitnick_knit@1.5.1"]
                                .knit.Services.TrainService.RE.Train:FireServer()
                        end)
                    end
                    task.wait(0.1)
                end
            end)
        end
    end,
})

----------------------------------------------------------------
-- Auto Rebirth ðŸ”„ (Toggle)
----------------------------------------------------------------
local autoRebirth = false
MainTab:CreateToggle({
    Name = "Auto Rebirth ðŸ”„",
    CurrentValue = false,
    Flag = "AutoRebirth",
    Callback = function(state)
        autoRebirth = state
        if autoRebirth then
            task.spawn(function()
                while autoRebirth do
                    pcall(function()
                        game:GetService("ReplicatedStorage")
                            .Packages["_Index"]["sleitnick_knit@1.5.1"]
                            .knit.Services.RebirthService.RF.Rebirth:InvokeServer()
                    end)
                    task.wait(0.1)
                end
            end)
        end
    end,
})

----------------------------------------------------------------
-- TP Walk (Speed 40) (Button)
----------------------------------------------------------------
MainTab:CreateButton({
    Name = "TP Walk (Speed 40)",
    Callback = function()
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local player = Players.LocalPlayer
        local tpwalking = true

        local function startTPWalk(char)
            local humanoid = char:WaitForChild("Humanoid")
            RunService.Heartbeat:Connect(function(dt)
                if tpwalking and humanoid and char.Parent then
                    if humanoid.MoveDirection.Magnitude > 0 then
                        char:TranslateBy(humanoid.MoveDirection * dt * 40)
                    end
                end
            end)
        end

        player.CharacterAdded:Connect(startTPWalk)
        if player.Character then
            startTPWalk(player.Character)
        end
    end,
})
