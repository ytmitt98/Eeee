--// Hashira Training Hub
-- Made by Vox

local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "Hashira Training | Made by Vox",
    LoadingTitle = "Hashira Training Hub",
    LoadingSubtitle = "by Vox",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "HashiraTrainingHub",
        FileName = "Settings"
    },
    Discord = {
        Enabled = false,
    },
    KeySystem = false,
})

--// Anti-Lag Tab
local AntiLagTab = Window:CreateTab("Remove character pop-up + evolve effects", 4483362458)

AntiLagTab:CreateButton({
    Name = "removed pop up+ effect",
    Callback = function()
        local badNames = {
            ["NewCharacterShowGui"] = true,
            ["NewCharacterShowController"] = true,
            ["BodySizeChange"] = true,
            ["middleBeams"] = true,
            ["LowerBeams"] = true,
        }

        local function checkAndDestroy(obj)
            if badNames[obj.Name] then
                obj:Destroy()
            elseif obj:IsA("ParticleEmitter") and obj.Parent and obj.Parent.Name == "Attachment" then
                obj:Destroy()
            end
        end

        for _, obj in ipairs(game:GetDescendants()) do
            checkAndDestroy(obj)
        end

        game.DescendantAdded:Connect(function(obj)
            checkAndDestroy(obj)
        end)

        task.spawn(function()
            while task.wait(10) do
                for _, obj in ipairs(game:GetDescendants()) do
                    checkAndDestroy(obj)
                end
                collectgarbage("collect")
            end
        end)
    end,
})

--// Training Tab
local TrainingTab = Window:CreateTab("Training", 4483362458)

local autoLift = false
TrainingTab:CreateToggle({
    Name = "Auto Lift (x3 Speed)",
    CurrentValue = false,
    Callback = function(Value)
        autoLift = Value
        task.spawn(function()
            while autoLift do
                for i = 1, 3 do
                    local args = {[1] = "Lift"}
                    game:GetService("ReplicatedStorage").Remotes.Training:FireServer(unpack(args))
                end
                task.wait(0.2)
            end
        end)
    end,
})

--// Movement Tab
local MovementTab = Window:CreateTab("Movement", 4483362458)

local tpwalking = false
local tpConnection

MovementTab:CreateToggle({
    Name = "TP Walk (Speed 40)",
    CurrentValue = false,
    Callback = function(Value)
        tpwalking = Value
        if tpwalking then
            local player = game:GetService("Players").LocalPlayer
            local function startTPWalk(character)
                local humanoid = character:WaitForChild("Humanoid")
                tpConnection = game:GetService("RunService").Heartbeat:Connect(function(delta)
                    if tpwalking and humanoid and character.Parent then
                        if humanoid.MoveDirection.Magnitude > 0 then
                            character:TranslateBy(humanoid.MoveDirection * delta * 40)
                        end
                    end
                end)
            end

            player.CharacterAdded:Connect(startTPWalk)
            if player.Character then
                startTPWalk(player.Character)
            end
        else
            if tpConnection then
                tpConnection:Disconnect()
                tpConnection = nil
            end
        end
    end,
})

--// Eggs Tab
local EggsTab = Window:CreateTab("Eggs", 4483362458)

local autoHatch = false
local selectedEgg = "Egg_1_1"

EggsTab:CreateDropdown({
    Name = "Select Egg",
    Options = {"Egg_1_1", "Egg_1_2", "Egg_1_3", "Egg_1_5"},
    CurrentOption = "Egg_1_1",
    Callback = function(Value)
        selectedEgg = Value
    end,
})

EggsTab:CreateToggle({
    Name = "Auto Hatch",
    CurrentValue = false,
    Callback = function(Value)
        autoHatch = Value
        task.spawn(function()
            while autoHatch do
                local args = {selectedEgg, 1}
                local HatchService = game:GetService("ReplicatedStorage")
                    :WaitForChild("Packages")
                    :WaitForChild("_Index")
                    :WaitForChild("sleitnick_knit@1.5.1")
                    :WaitForChild("knit")
                    :WaitForChild("Services")
                    :WaitForChild("EggHatchService")
                    :WaitForChild("RE")
                    :WaitForChild("Hatch")
                HatchService:FireServer(unpack(args))
                task.wait(1)
            end
        end)
    end,
})
